logging:
  config: classpath:logback-${spring.profiles.active}.xml

spring:
  datasource:
    hikari:
      # 데이터베이스와 정상적으로 연결되는지 확인하기 위한 쿼리
      connection-test-query: SELECT 1
      allow-pool-suspension: true
  jpa:
    database: mysql
    # InnoDB 설정
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    # JPA의 엔티티 연관관계를 바탕으로 테이블 생성과 같은 스크립트(Data Definition Language; DDL)를 자동으로 실행하도록 합니다.
    # 실제 개발에서는 이 기능은 꼭 false로 사용해야 합니다.
    # 개발자의 실수 등으로 예상치 못하게 데이터베이스에 변경이 생기면서 데이터가 삭제될 수 있기 때문입니다.
    generate-ddl: true
    # 하이버네이트의 새로운 ID 생성 옵션의 사용 여부를 설정합니다.
    # 하이버네이트의 ID 생성 옵션은 AUTO, TABLE, SEQUENCE가 있는데, MySQL의 Auto Increment 속성을 사용하기 때문에 false를 설정합니다.
    hibernate:
      use-new-id-generator-mappings: false

mybatis:
  configuration:
    map-underscore-to-camel-case: true

---
spring:
  profiles: dev
  datasource:
    hikari:
      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      # 연결할 데이터베이스의 주소를 설정합니다. 주소에 유니코드 설정과 UTF-8 문자열 인코딩, 서버의 타임존 설정을 추가합니다.
      jdbc-url: jdbc:log4jdbc:mysql://127.0.0.1:13306/board?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
      # 데이터베이스의 아이디와 비밀번호를 설정합니다.
      username: yunheur
      password: yunheur
  devtools:
    # 자동 재시작 설정 여부
    restart:
      enabled: true
    # 리소스(html)가 변경되면 브라우저가 자동으로 새로고침
    livereload:
      enabled: true
  # 캐시 비활성화
  thymeleaf:
    cache: false
  resources:
    cache:
      period: 0

---
spring:
  profiles: production
  datasource:
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
      username: [id]
      password: [password]